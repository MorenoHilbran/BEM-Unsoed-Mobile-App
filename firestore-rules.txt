rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ============================================
    // USERS COLLECTION
    // ============================================
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // ============================================
    // POSTS COLLECTION
    // ============================================
    match /posts/{postId} {
      // Read: semua authenticated users
      allow read: if request.auth != null;

      // Create: semua authenticated users
      allow create: if request.auth != null;

      // Update: semua authenticated users (untuk like count, dll)
      allow update: if request.auth != null;

      // Delete: HANYA owner post
      allow delete: if request.auth != null &&
                       request.auth.uid == resource.data.authorId;

      // Subcollection likes di dalam posts
      match /likes/{likeId} {
        allow read, write, delete: if request.auth != null;
      }
    }

    // ============================================
    // COMMENTS COLLECTION
    // ============================================
    match /comments/{commentId} {
      // Read: semua authenticated users
      allow read: if request.auth != null;

      // Create: semua authenticated users
      allow create: if request.auth != null;

      // Update: semua authenticated users (untuk like count, dll)
      allow update: if request.auth != null;

      // Delete: HANYA owner comment (simplified - no cascade check)
      allow delete: if request.auth != null &&
                       request.auth.uid == resource.data.authorId;

      // Subcollection likes di dalam comments
      match /likes/{likeId} {
        allow read, write, delete: if request.auth != null;
      }
    }

    // ============================================
    // LIKES COLLECTION (Root Level)
    // ============================================
    match /likes/{likeId} {
      allow read, write, delete: if request.auth != null;
    }

    // ============================================
    // NOTIFICATIONS COLLECTION
    // ============================================
    match /notifications/{notificationId} {
      // Read: hanya recipient
      allow read: if request.auth != null &&
                     request.auth.uid == resource.data.recipientId;

      // Create: semua authenticated users
      allow create: if request.auth != null;

      // Update: hanya recipient (untuk mark as read)
      allow update: if request.auth != null &&
                       request.auth.uid == resource.data.recipientId;

      // Delete: recipient atau actor (untuk cleanup) - SIMPLIFIED
      allow delete: if request.auth != null;
    }

    // ============================================
    // EVENTS COLLECTION
    // ============================================
    match /events/{eventId} {
      allow read, write: if request.auth != null;
    }

    // ============================================
    // BANNERS COLLECTION
    // ============================================
    match /banners/{bannerId} {
      allow read, write: if request.auth != null;
    }

    // ============================================
    // MERCH COLLECTION
    // ============================================
    match /merch/{merchId} {
      allow read, write: if request.auth != null;
    }

    // ============================================
    // KULINER COLLECTION
    // ============================================
    match /kuliner/{kulinerId} {
      // Read: semua authenticated users bisa baca
      allow read: if request.auth != null;
      
      // Write: hanya authenticated users (untuk admin/create data)
      allow write: if request.auth != null;
    }

    // ============================================
    // INFO KOS COLLECTION
    // ============================================
    match /infokos/{infokosId} {
      // Read: semua authenticated users bisa baca
      allow read: if request.auth != null;
      
      // Write: hanya authenticated users (untuk admin/create data)
      allow write: if request.auth != null;
    }
  }
}
